{
  "name": "Absorb Elements",
  "type": "spell",
  "img": "icons/magic/defensive/shield-barrier-flaming-diamond-red.webp",
  "effects": [
    {
      "_id": "iJ9E4fnIwXjfi1TP",
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "none",
          "transfer": false,
          "specialDuration": [
            "DamageDealt",
            "turnEnd"
          ],
          "selfTarget": false,
          "durationExpression": "",
          "enableCondition": "",
          "disableCondition": "",
          "disableIncapacitated": false,
          "selfTargetAlways": false,
          "dontApply": false,
          "showIcon": false
        },
        "ActiveAuras": {
          "isAura": false,
          "ignoreSelf": false,
          "hidden": false,
          "height": false,
          "alignment": "",
          "type": "",
          "aura": "None",
          "radius": null,
          "save": "",
          "savedc": null,
          "hostile": false,
          "onlyOnce": false,
          "time": "None"
        },
        "core": {
          "overlay": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        }
      },
      "changes": [
        {
          "key": "system.bonuses.msak.damage",
          "mode": 0,
          "value": "0",
          "priority": 20
        },
        {
          "key": "system.bonuses.mwak.damage",
          "mode": 0,
          "value": "0",
          "priority": 20
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "rounds": 2,
        "startTurn": 1,
        "seconds": null,
        "combat": null,
        "turns": null,
        "startRound": null
      },
      "tint": "#ffffff",
      "transfer": false,
      "origin": null,
      "name": "Absorb Elements",
      "description": "",
      "statuses": [],
      "_stats": {
        "compendiumSource": "Scene.GO63mgFDMhBfPVWf.Token.y8rDGEEuPTa8Oz4m.Actor.2W8ip8j0hvK2pQ7V.Item.wdJlLWxQuUuyCwA5.ActiveEffect.iJ9E4fnIwXjfi1TP",
        "duplicateSource": null,
        "coreVersion": "12.343",
        "systemId": "dnd5e",
        "systemVersion": "4.4.2",
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null
      },
      "img": "icons/magic/defensive/shield-barrier-flaming-diamond-red.webp",
      "type": "base",
      "system": {},
      "sort": 0,
      "_key": "!items.effects!GVI5yQzIKrEvWyWI.iJ9E4fnIwXjfi1TP"
    },
    {
      "_id": "8r9eWcqP6QyIbPWU",
      "changes": [
        {
          "key": "system.traits.dr.value",
          "mode": 2,
          "value": "fire",
          "priority": 20
        }
      ],
      "disabled": false,
      "duration": {
        "rounds": 2,
        "startTime": null,
        "seconds": null,
        "combat": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "origin": "Item.csBPw2sdmOigPnOV",
      "transfer": false,
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "none",
          "specialDuration": [
            "turnEnd"
          ],
          "transfer": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false
        },
        "core": {
          "statusId": ""
        }
      },
      "tint": "#ffffff",
      "name": "Absorb Elements Resistance",
      "description": "",
      "statuses": [],
      "_stats": {
        "compendiumSource": null,
        "duplicateSource": null,
        "coreVersion": "12.343",
        "systemId": "dnd5e",
        "systemVersion": "4.4.2",
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null
      },
      "img": "icons/magic/defensive/shield-barrier-flaming-diamond-red.webp",
      "type": "base",
      "system": {},
      "sort": 0,
      "_key": "!items.effects!GVI5yQzIKrEvWyWI.8r9eWcqP6QyIbPWU"
    }
  ],
  "flags": {
    "dynamiceffects": {
      "equipActive": [
        true,
        true,
        true
      ],
      "alwaysActive": [
        true,
        true,
        true
      ]
    },
    "mess": {
      "templateTexture": ""
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false,
      "macro": {
        "name": "Absorb Elements",
        "img": "icons/magic/defensive/shield-barrier-flaming-diamond-red.webp",
        "type": "script",
        "scope": "global",
        "command": "const version = \"11.0.7\";\ntry {\n  let tactor;\n  let itemName = args[0].itemData.name;\n  if (args[0].tokenUuid) tactor = (await fromUuid(args[0].tokenUuid)).actor;\n  else tactor = game.actors.get(args[0].actorId);\n\n  let dialog = new Promise((resolve, reject) => {\n      new Dialog({\n          title: 'Choose a damage type',\n          content: `\n            <form class=\"flexcol\">\n              <div class=\"form-group\">\n                <select id=\"element\">\n                  <option value=\"acid\">Acid</option>\n                  <option value=\"cold\">Cold</option>\n                  <option value=\"fire\">Fire</option>\n                  <option value=\"lightning\">Lightning</option>\n                  <option value=\"thunder\">Thunder</option>\n                </select>\n              </div>\n            </form>\n          `,\n          //select element type\n          buttons: {\n              yes: {\n                  icon: '<i class=\"fas fa-bolt\"></i>',\n                  label: 'Select',\n                  callback: async (html) => {\n                      let element = html.find('#element').val();\n                      let effect =  tactor.effects.find(i => i.label === itemName);\n                      let changes = duplicate(effect.changes);\n                      changes[0].value = `${Math.max(1, args[0].spellLevel)}d6[${element}]`;\n                      changes[1].value = `${Math.max(1,args[0].spellLevel)}d6[${element}]`;\n                      await effect.update({changes});\n                      effect =  tactor.effects.find(i => i.label === `${itemName} Resistance`);\n                      changes = duplicate(effect.changes);\n                      changes[0].value = element;\n                      await effect.update({changes});\n                      resolve();\n                  },\n              },\n          }\n      }).render(true);\n  })\n  await dialog;\n} catch (err) {\n    console.error(`${itemName} - Absorb Elements ${version}`, err);\n}",
        "author": "Zl1BOUaPLwDEujaL",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "coreVersion": "12.331",
          "systemId": "dnd5e",
          "systemVersion": "4.0.4",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    },
    "betterRolls5e": {
      "quickDesc": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickAttack": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickSave": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickDamage": {
        "type": "Array",
        "value": [],
        "altValue": [],
        "context": []
      },
      "quickVersatile": {
        "type": "Boolean",
        "value": false,
        "altValue": false
      },
      "quickProperties": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickCharges": {
        "type": "Boolean",
        "value": {
          "use": false,
          "resource": true
        },
        "altValue": {
          "use": false,
          "resource": true
        }
      },
      "quickTemplate": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickOther": {
        "type": "Boolean",
        "value": true,
        "altValue": true,
        "context": ""
      },
      "quickFlavor": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickPrompt": {
        "type": "Boolean",
        "value": false,
        "altValue": false
      }
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Absorb Elements",
          "type": "script",
          "author": "devnIbfBHb74U9Zv",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "let tactor;\nlet itemname = \"Absorb Elements\";\nif (args[0].tokenUuid) tactor = (await fromUuid(args[0].tokenUuid)).actor;\nelse tactor = game.actors.get(args[0].actorId);\n\nlet dialog = new Promise((resolve, reject) => {\n    new Dialog({\n        title: 'Choose a damage type',\n        content: `\n          <form class=\"flexcol\">\n            <div class=\"form-group\">\n              <select id=\"element\">\n                <option value=\"acid\">Acid</option>\n                <option value=\"cold\">Cold</option>\n                <option value=\"fire\">Fire</option>\n                <option value=\"lightning\">Lightning</option>\n                <option value=\"thunder\">Thunder</option>\n              </select>\n            </div>\n          </form>\n        `,\n        //select element type\n        buttons: {\n            yes: {\n                icon: '<i class=\"fas fa-bolt\"></i>',\n                label: 'Select',\n                callback: async (html) => {\n                    let element = html.find('#element').val();\n                    let effect =  tactor.effects.find(i => i.data.label === itemname);\n                    let changes = duplicate(effect.data.changes);\n                    changes[0].value = `${args[0].spellLevel}d6[${element}]`;\n                    changes[1].value = `${args[0].spellLevel}d6[${element}]`;\n                    await effect.update({changes});\n                    effect =  tactor.effects.find(i => i.data.label === `${itemname} Resistance`);\n                    changes = duplicate(effect.data.changes);\n                    changes[0].value = element;\n                    await effect.update({changes});\n                    resolve();\n                },\n            },\n        }\n    }).render(true);\n})\nawait dialog;",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "name": "Absorb Elements",
        "type": "script",
        "img": "icons/svg/dice-target.svg",
        "scope": "global",
        "command": "const version = \"11.0.7\";\ntry {\n  let tactor;\n  let itemName = args[0].itemData.name;\n  if (args[0].tokenUuid) tactor = (await fromUuid(args[0].tokenUuid)).actor;\n  else tactor = game.actors.get(args[0].actorId);\n\n  let dialog = new Promise((resolve, reject) => {\n      new Dialog({\n          title: 'Choose a damage type',\n          content: `\n            <form class=\"flexcol\">\n              <div class=\"form-group\">\n                <select id=\"element\">\n                  <option value=\"acid\">Acid</option>\n                  <option value=\"cold\">Cold</option>\n                  <option value=\"fire\">Fire</option>\n                  <option value=\"lightning\">Lightning</option>\n                  <option value=\"thunder\">Thunder</option>\n                </select>\n              </div>\n            </form>\n          `,\n          //select element type\n          buttons: {\n              yes: {\n                  icon: '<i class=\"fas fa-bolt\"></i>',\n                  label: 'Select',\n                  callback: async (html) => {\n                      let element = html.find('#element').val();\n                      let effect =  tactor.effects.find(i => i.label === itemName);\n                      let changes = duplicate(effect.changes);\n                      changes[0].value = `${args[0].spellLevel}d6[${element}]`;\n                      changes[1].value = `${args[0].spellLevel}d6[${element}]`;\n                      await effect.update({changes});\n                      effect =  tactor.effects.find(i => i.label === `${itemName} Resistance`);\n                      changes = duplicate(effect.changes);\n                      changes[0].value = element;\n                      await effect.update({changes});\n                      resolve();\n                  },\n              },\n          }\n      }).render(true);\n  })\n  await dialog;\n} catch (err) {\n    console.error(`${itemName} - Absorb Elements ${version}`, err);\n}",
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false,
      "rollAttackPerTarget": "default",
      "itemCondition": "",
      "reactionCondition": "",
      "effectCondition": "",
      "otherCondition": "",
      "removeAttackDamageButtons": "default"
    },
    "core": {},
    "favtab": {
      "isFavorite": false
    },
    "cf": {
      "id": "temp_0hvf80hl1zcf",
      "color": "#000000"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "offHandWeapon": false,
      "ignoreTotalCover": false,
      "confirmTargets": "default",
      "noConcentrationCheck": false,
      "idr": false,
      "idi": false,
      "idv": false,
      "ida": false
    },
    "walledtemplates": {
      "wallsBlock": "globalDefault",
      "wallRestriction": "globalDefault",
      "hideBorder": "globalDefault",
      "hideHighlighting": "globalDefault",
      "showOnHover": "globalDefault",
      "noAutotarget": false,
      "addTokenSize": false,
      "attachToken": "na"
    },
    "dnd5e": {
      "persistSourceMigration": true,
      "migratedProperties": [
        "somatic"
      ],
      "riders": {
        "activity": [],
        "effect": []
      },
      "dependents": [
        {
          "uuid": "Actor.BogmFuNh1wswTouJ.ActiveEffect.UhYOAouwN9n7Kedg"
        },
        {
          "uuid": "Actor.BogmFuNh1wswTouJ.ActiveEffect.w5wytwwPVb7SzNw7"
        }
      ]
    },
    "tidy5e-sheet": {
      "section": "",
      "actionSection": ""
    }
  },
  "system": {
    "description": {
      "value": "<p class=\"Core-Styles_Core-Body\">The spell captures some of the incoming energy, lessening its effect on you and storing it for your next melee attack. You have resistance to the triggering damage type until the start of your next turn. Also, the first time you hit with a melee attack on your next turn, the target takes an extra 1d6 damage of the triggering type, and the spell ends.</p><p class=\"Core-Styles_Core-Body\"><span class=\"Serif-Character-Style_Inline-Subhead-Serif\"><strong>At Higher Levels.</strong> </span>When you cast this spell using a spell slot of 2nd level or higher, the extra damage increases by 1d6 for each slot level above 1st.</p>",
      "chat": ""
    },
    "source": {
      "custom": "XGE",
      "revision": 1,
      "rules": "2014",
      "book": "",
      "page": "",
      "license": ""
    },
    "activation": {
      "type": "reaction",
      "condition": "which you take when you take acid, cold, fire, lightning, or thunder damage",
      "value": 1
    },
    "duration": {
      "value": "1",
      "units": "round"
    },
    "target": {
      "affects": {
        "type": "self",
        "choice": false,
        "special": ""
      },
      "template": {
        "units": "",
        "contiguous": false,
        "type": ""
      }
    },
    "range": {
      "units": "self",
      "special": ""
    },
    "uses": {
      "max": "",
      "spent": 0,
      "recovery": []
    },
    "ability": "",
    "level": 1,
    "school": "abj",
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "activities": {
      "dnd5eactivity000": {
        "_id": "dnd5eactivity000",
        "type": "utility",
        "activation": {
          "type": "action",
          "value": null,
          "override": false
        },
        "consumption": {
          "targets": [],
          "scaling": {
            "allowed": false,
            "max": ""
          },
          "spellSlot": true
        },
        "description": {
          "chatFlavor": ""
        },
        "duration": {
          "units": "inst",
          "concentration": false,
          "override": false
        },
        "effects": [
          {
            "_id": "iJ9E4fnIwXjfi1TP"
          },
          {
            "_id": "8r9eWcqP6QyIbPWU"
          }
        ],
        "range": {
          "override": false
        },
        "target": {
          "prompt": true,
          "template": {
            "contiguous": false,
            "units": "ft"
          },
          "affects": {
            "choice": false
          },
          "override": false
        },
        "uses": {
          "spent": 0,
          "max": "",
          "recovery": []
        },
        "roll": {
          "formula": "",
          "name": "",
          "prompt": false,
          "visible": false
        },
        "sort": 0,
        "useConditionText": "reaction === \"isDamaged\"",
        "effectConditionText": "",
        "name": "",
        "macroData": {
          "name": "",
          "command": ""
        },
        "ignoreTraits": {
          "idi": false,
          "idr": false,
          "idv": false,
          "ida": false
        },
        "midiProperties": {
          "forceDialog": false,
          "confirmTargets": "default",
          "automationOnly": false,
          "identifier": "",
          "ignoreTraits": [],
          "triggeredActivityId": "none",
          "triggeredActivityConditionText": "",
          "triggeredActivityTargets": "targets",
          "triggeredActivityRollAs": "self",
          "autoTargetType": "any",
          "autoTargetAction": "default",
          "otherActivityCompatible": true,
          "displayActivityName": false,
          "rollMode": "default",
          "chooseEffects": false,
          "toggleEffect": false,
          "ignoreFullCover": false
        },
        "useConditionReason": "",
        "otherActivityId": "",
        "isOverTimeFlag": false,
        "overTimeProperties": {
          "saveRemoves": true,
          "preRemoveConditionText": "",
          "postRemoveConditionText": ""
        }
      }
    },
    "identifier": "absorb-elements",
    "properties": [],
    "sourceClass": "rogue"
  },
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "coreVersion": "12.343",
    "systemId": "dnd5e",
    "systemVersion": "4.4.2",
    "createdTime": 1748452803364,
    "modifiedTime": 1748453251190,
    "lastModifiedBy": "6yhz13iFYYklKtgA"
  },
  "folder": null,
  "_id": "GVI5yQzIKrEvWyWI",
  "sort": 200000,
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_key": "!items!GVI5yQzIKrEvWyWI"
}
